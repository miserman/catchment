% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/catchment_connections.R
\name{catchment_connections}
\alias{catchment_connections}
\title{Extract Connections Within Catchment Areas}
\usage{
catchment_connections(from, to, cost = NULL, weight = 1, ...,
  return_type = "data.frame", from_id = "GEOID", from_coords = c("X",
  "Y"), to_id = "GEOID", to_coords = c("X", "Y"))
}
\arguments{
\item{from}{Consumer locations; a matrix-like object with columns containing latitudes and longitudes
(identified by \code{from_coords}), and a column of IDs corresponding to rows in \code{cost} (identified by
\code{from_id}). Each identifying column can alternatively contain the associated matrix or vector, and
IDs can be in row names.}

\item{to}{Provider locations;a matrix-like object with columns containing latitudes and longitudes
(identified by \code{to_coords}), and a column of IDs corresponding to columns in \code{cost} (identified by
\code{to_id}). Each identifying column can alternatively contain the associated matrix or vector, and
IDs can be in row names.}

\item{cost}{A cost matrix, with row names corresponding to IDs of \code{from}, and column names corresponding to
IDs of \code{to}.}

\item{weight}{A weight matrix with the same dimensions as \code{cost}, such as returned from
\code{\link{catchment_weight}}.}

\item{...}{Passes arguments to \code{catchment_weight} if \code{weight} is not a weight matrix.}

\item{return_type}{Specify whether to return a \code{data.frame} (default) with connection ids, weights, and costs,
an \code{sf} \code{data.frame} (\code{"sf"}) with linestring geometries added for each connection,
or a GeoJSON-formatted list (\code{"list"}).}

\item{from_id, from_coords, to_id, to_coords}{Names of ID and coordinate columns in \code{from} and \code{to},
or vectors of IDs and matrices of coordinates.}
}
\value{
An object with connection, weight, and cost information, with a format depending on \code{return_type}.
}
\description{
Extract connected consumer (\code{from}) and provider (\code{to}) locations within a catchment area,
as defined by cost and weights.
}
\examples{
pop <- simulate_catchments()
connections <- catchment_connections(
  pop$consumers, pop$providers,
  weight = "gaussian", max_cost = 1,
  return_type = "sf"
)
if (require("leaflet", quiet = TRUE)) {
  leaflet() |>
    addPolylines(
      data = connections, weight = 3, color = "#777",
      highlightOptions = highlightOptions(color = "#fff", weight = 4),
      label = ~ paste0("From: ", from, ", To: ", to, ", Weight: ", weight, ", Cost: ", cost)
    ) |>
    addCircles(
      data = pop$consumers, label = ~ paste0("Consumers: ", count, ", Access: ", access)
    ) |>
    addCircles(
      data = pop$providers, color = "#000", label = ~ paste("Provider", id)
    )
}
}
